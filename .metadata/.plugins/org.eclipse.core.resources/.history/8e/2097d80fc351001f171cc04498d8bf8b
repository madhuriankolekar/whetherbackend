package com.example.demo;



import javax.jms.*;

public class JmsExample {

    // Placeholder for a connection factory
    private static ConnectionFactory createConnectionFactory() {
        // Return a real connection factory instance in practice
        return new com.example.InMemoryConnectionFactory();
    }

    public static void main(String[] args) throws JMSException {
        // Create a connection factory
        ConnectionFactory connectionFactory = createConnectionFactory();

        // Create a connection
        try (Connection connection = connectionFactory.createConnection()) {
            connection.start();

            // Create a session
            try (Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE)) {

                // Create a topic and a queue
                Topic topic = session.createTopic("SampleTopic");
                Queue queue = session.createQueue("SampleQueue");

                // Create a producer for the topic
                try (MessageProducer topicProducer = session.createProducer(topic)) {
                    TextMessage message = session.createTextMessage("Hello, Topic!");
                    topicProducer.send(message);
                    System.out.println("Sent message to topic: " + message.getText());
                }

                // Create a producer for the queue
                try (MessageProducer queueProducer = session.createProducer(queue)) {
                    TextMessage message = session.createTextMessage("Hello, Queue!");
                    queueProducer.send(message);
                    System.out.println("Sent message to queue: " + message.getText());
                }

                // Create a consumer for the topic
                try (MessageConsumer topicConsumer = session.createConsumer(topic)) {
                    Message receivedMessage = topicConsumer.receive(1000);
                    if (receivedMessage instanceof TextMessage) {
                        TextMessage textMessage = (TextMessage) receivedMessage;
                        System.out.println("Received message from topic: " + textMessage.getText());
                    }
                }

                // Create a consumer for the queue
                try (MessageConsumer queueConsumer = session.createConsumer(queue)) {
                    Message receivedMessage = queueConsumer.receive(1000);
                    if (receivedMessage instanceof TextMessage) {
                        TextMessage textMessage = (TextMessage) receivedMessage;
                        System.out.println("Received message from queue: " + textMessage.getText());
                    }
                }
            }
        }
    }
}
