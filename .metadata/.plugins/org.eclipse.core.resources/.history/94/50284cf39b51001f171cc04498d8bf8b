package com.example.demo.config;




import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.jms.annotation.EnableJms;
import org.springframework.jms.core.JmsTemplate;

import javax.jms.Queue;
import javax.jms.Topic;
import javax.jms.Session;
import org.springframework.jms.connection.CachingConnectionFactory;
import org.springframework.jms.support.converter.MappingJackson2MessageConverter;
import org.springframework.jms.support.converter.MessageType;
import com.sun.messaging.ConnectionFactory;
import com.sun.messaging.jms.JMSException;

@Configuration
@EnableJms
public class JmsConfig {

    @Bean
    public Queue queue() {
        return new com.sun.messaging.Queue("demo-queue");
    }

    @Bean
    public Topic topic() {
        return new com.sun.messaging.Topic("demo-topic");
    }

    @Bean
    public CachingConnectionFactory cachingConnectionFactory() {
        CachingConnectionFactory factory = new CachingConnectionFactory();
        factory.setTargetConnectionFactory(connectionFactory());
        factory.setSessionCacheSize(10);
        return factory;
    }

    @Bean
    public ConnectionFactory connectionFactory() {
        ConnectionFactory connectionFactory = new ConnectionFactory();
        try {
            connectionFactory.setProperty(ConnectionConfiguration.imqAddressList, "mq://localhost:7676");
        } catch (JMSException e) {
            e.printStackTrace();
        }
        return connectionFactory;
    }

    @Bean
    public JmsTemplate jmsTemplate() {
        JmsTemplate template = new JmsTemplate();
        template.setConnectionFactory(cachingConnectionFactory());
        template.setPubSubDomain(false);
        return template;
    }

    @Bean
    public JmsTemplate jmsTemplateTopic() {
        JmsTemplate template = new JmsTemplate();
        template.setConnectionFactory(cachingConnectionFactory());
        template.setPubSubDomain(true);
        return template;
    }

    @Bean
    public MappingJackson2MessageConverter jacksonJmsMessageConverter() {
        MappingJackson2MessageConverter converter = new MappingJackson2MessageConverter();
        converter.setTargetType(MessageType.TEXT);
        converter.setTypeIdPropertyName("_type");
        return converter;
    }
}
